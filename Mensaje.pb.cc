// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Mensaje.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Mensaje_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Mensaje_reflection_ = NULL;
const ::google::protobuf::Descriptor* Mensaje_Rectangulo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Mensaje_Rectangulo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Mensaje_2eproto() {
  protobuf_AddDesc_Mensaje_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Mensaje.proto");
  GOOGLE_CHECK(file != NULL);
  Mensaje_descriptor_ = file->message_type(0);
  static const int Mensaje_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mensaje, devicename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mensaje, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mensaje, rectangulos_),
  };
  Mensaje_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Mensaje_descriptor_,
      Mensaje::default_instance_,
      Mensaje_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mensaje, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mensaje, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Mensaje));
  Mensaje_Rectangulo_descriptor_ = Mensaje_descriptor_->nested_type(0);
  static const int Mensaje_Rectangulo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mensaje_Rectangulo, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mensaje_Rectangulo, y_),
  };
  Mensaje_Rectangulo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Mensaje_Rectangulo_descriptor_,
      Mensaje_Rectangulo::default_instance_,
      Mensaje_Rectangulo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mensaje_Rectangulo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Mensaje_Rectangulo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Mensaje_Rectangulo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Mensaje_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Mensaje_descriptor_, &Mensaje::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Mensaje_Rectangulo_descriptor_, &Mensaje_Rectangulo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Mensaje_2eproto() {
  delete Mensaje::default_instance_;
  delete Mensaje_reflection_;
  delete Mensaje_Rectangulo::default_instance_;
  delete Mensaje_Rectangulo_reflection_;
}

void protobuf_AddDesc_Mensaje_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rMensaje.proto\"~\n\007Mensaje\022\022\n\ndeviceName"
    "\030\001 \002(\t\022\021\n\ttimestamp\030\002 \002(\004\022(\n\013rectangulos"
    "\030\003 \003(\0132\023.Mensaje.Rectangulo\032\"\n\nRectangul"
    "o\022\t\n\001X\030\001 \002(\005\022\t\n\001Y\030\002 \002(\005", 143);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Mensaje.proto", &protobuf_RegisterTypes);
  Mensaje::default_instance_ = new Mensaje();
  Mensaje_Rectangulo::default_instance_ = new Mensaje_Rectangulo();
  Mensaje::default_instance_->InitAsDefaultInstance();
  Mensaje_Rectangulo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Mensaje_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Mensaje_2eproto {
  StaticDescriptorInitializer_Mensaje_2eproto() {
    protobuf_AddDesc_Mensaje_2eproto();
  }
} static_descriptor_initializer_Mensaje_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int Mensaje_Rectangulo::kXFieldNumber;
const int Mensaje_Rectangulo::kYFieldNumber;
#endif  // !_MSC_VER

Mensaje_Rectangulo::Mensaje_Rectangulo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Mensaje_Rectangulo::InitAsDefaultInstance() {
}

Mensaje_Rectangulo::Mensaje_Rectangulo(const Mensaje_Rectangulo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Mensaje_Rectangulo::SharedCtor() {
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Mensaje_Rectangulo::~Mensaje_Rectangulo() {
  SharedDtor();
}

void Mensaje_Rectangulo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Mensaje_Rectangulo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mensaje_Rectangulo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Mensaje_Rectangulo_descriptor_;
}

const Mensaje_Rectangulo& Mensaje_Rectangulo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Mensaje_2eproto();  return *default_instance_;
}

Mensaje_Rectangulo* Mensaje_Rectangulo::default_instance_ = NULL;

Mensaje_Rectangulo* Mensaje_Rectangulo::New() const {
  return new Mensaje_Rectangulo;
}

void Mensaje_Rectangulo::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    x_ = 0;
    y_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Mensaje_Rectangulo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 X = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
          set_has_x();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Y;
        break;
      }
      
      // required int32 Y = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
          set_has_y();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Mensaje_Rectangulo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 X = 1;
  if (has_x()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }
  
  // required int32 Y = 2;
  if (has_y()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Mensaje_Rectangulo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 X = 1;
  if (has_x()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }
  
  // required int32 Y = 2;
  if (has_y()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Mensaje_Rectangulo::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 X = 1;
    if (has_x()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->x());
    }
    
    // required int32 Y = 2;
    if (has_y()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->y());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mensaje_Rectangulo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Mensaje_Rectangulo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Mensaje_Rectangulo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Mensaje_Rectangulo::MergeFrom(const Mensaje_Rectangulo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_x()) {
      set_x(from.x());
    }
    if (from.has_y()) {
      set_y(from.y());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Mensaje_Rectangulo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mensaje_Rectangulo::CopyFrom(const Mensaje_Rectangulo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mensaje_Rectangulo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void Mensaje_Rectangulo::Swap(Mensaje_Rectangulo* other) {
  if (other != this) {
    std::swap(x_, other->x_);
    std::swap(y_, other->y_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Mensaje_Rectangulo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Mensaje_Rectangulo_descriptor_;
  metadata.reflection = Mensaje_Rectangulo_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Mensaje::kDeviceNameFieldNumber;
const int Mensaje::kTimestampFieldNumber;
const int Mensaje::kRectangulosFieldNumber;
#endif  // !_MSC_VER

Mensaje::Mensaje()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Mensaje::InitAsDefaultInstance() {
}

Mensaje::Mensaje(const Mensaje& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Mensaje::SharedCtor() {
  _cached_size_ = 0;
  devicename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  timestamp_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Mensaje::~Mensaje() {
  SharedDtor();
}

void Mensaje::SharedDtor() {
  if (devicename_ != &::google::protobuf::internal::kEmptyString) {
    delete devicename_;
  }
  if (this != default_instance_) {
  }
}

void Mensaje::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Mensaje::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Mensaje_descriptor_;
}

const Mensaje& Mensaje::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Mensaje_2eproto();  return *default_instance_;
}

Mensaje* Mensaje::default_instance_ = NULL;

Mensaje* Mensaje::New() const {
  return new Mensaje;
}

void Mensaje::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_devicename()) {
      if (devicename_ != &::google::protobuf::internal::kEmptyString) {
        devicename_->clear();
      }
    }
    timestamp_ = GOOGLE_ULONGLONG(0);
  }
  rectangulos_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Mensaje::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string deviceName = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_devicename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->devicename().data(), this->devicename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_timestamp;
        break;
      }
      
      // required uint64 timestamp = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rectangulos;
        break;
      }
      
      // repeated .Mensaje.Rectangulo rectangulos = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rectangulos:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rectangulos()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rectangulos;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Mensaje::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string deviceName = 1;
  if (has_devicename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicename().data(), this->devicename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->devicename(), output);
  }
  
  // required uint64 timestamp = 2;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->timestamp(), output);
  }
  
  // repeated .Mensaje.Rectangulo rectangulos = 3;
  for (int i = 0; i < this->rectangulos_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rectangulos(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Mensaje::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string deviceName = 1;
  if (has_devicename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->devicename().data(), this->devicename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->devicename(), target);
  }
  
  // required uint64 timestamp = 2;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->timestamp(), target);
  }
  
  // repeated .Mensaje.Rectangulo rectangulos = 3;
  for (int i = 0; i < this->rectangulos_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rectangulos(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Mensaje::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string deviceName = 1;
    if (has_devicename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->devicename());
    }
    
    // required uint64 timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->timestamp());
    }
    
  }
  // repeated .Mensaje.Rectangulo rectangulos = 3;
  total_size += 1 * this->rectangulos_size();
  for (int i = 0; i < this->rectangulos_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rectangulos(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Mensaje::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Mensaje* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Mensaje*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Mensaje::MergeFrom(const Mensaje& from) {
  GOOGLE_CHECK_NE(&from, this);
  rectangulos_.MergeFrom(from.rectangulos_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_devicename()) {
      set_devicename(from.devicename());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Mensaje::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Mensaje::CopyFrom(const Mensaje& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Mensaje::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  for (int i = 0; i < rectangulos_size(); i++) {
    if (!this->rectangulos(i).IsInitialized()) return false;
  }
  return true;
}

void Mensaje::Swap(Mensaje* other) {
  if (other != this) {
    std::swap(devicename_, other->devicename_);
    std::swap(timestamp_, other->timestamp_);
    rectangulos_.Swap(&other->rectangulos_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Mensaje::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Mensaje_descriptor_;
  metadata.reflection = Mensaje_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
